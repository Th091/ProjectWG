/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/google/apis-client-generator/
 * (build: 2016-07-08 17:28:43 UTC)
 * on 2016-09-25 at 17:26:28 UTC 
 * Modify at your own risk.
 */

package com.wgappbackend.buyingendpoint.model;

/**
 * Model definition for Buying.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the buyingendpoint. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class Buying extends com.google.api.client.json.GenericJson {

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<Aliment> alimentList;

  static {
    // hack to force ProGuard to consider Aliment used, since otherwise it would be stripped out
    // see https://github.com/google/google-api-java-client/issues/543
    com.google.api.client.util.Data.nullOf(Aliment.class);
  }

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private Commune commune;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private com.google.api.client.util.DateTime date;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private AlimentGroup group;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer id;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private Resident resident;

  /**
   * @return value or {@code null} for none
   */
  public java.util.List<Aliment> getAlimentList() {
    return alimentList;
  }

  /**
   * @param alimentList alimentList or {@code null} for none
   */
  public Buying setAlimentList(java.util.List<Aliment> alimentList) {
    this.alimentList = alimentList;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public Commune getCommune() {
    return commune;
  }

  /**
   * @param commune commune or {@code null} for none
   */
  public Buying setCommune(Commune commune) {
    this.commune = commune;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public com.google.api.client.util.DateTime getDate() {
    return date;
  }

  /**
   * @param date date or {@code null} for none
   */
  public Buying setDate(com.google.api.client.util.DateTime date) {
    this.date = date;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public AlimentGroup getGroup() {
    return group;
  }

  /**
   * @param group group or {@code null} for none
   */
  public Buying setGroup(AlimentGroup group) {
    this.group = group;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Integer getId() {
    return id;
  }

  /**
   * @param id id or {@code null} for none
   */
  public Buying setId(java.lang.Integer id) {
    this.id = id;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public Resident getResident() {
    return resident;
  }

  /**
   * @param resident resident or {@code null} for none
   */
  public Buying setResident(Resident resident) {
    this.resident = resident;
    return this;
  }

  @Override
  public Buying set(String fieldName, Object value) {
    return (Buying) super.set(fieldName, value);
  }

  @Override
  public Buying clone() {
    return (Buying) super.clone();
  }

}
